<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="false">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">1</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>10</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MC0CFQCG6+aWQfDPmAbNU28qqtSQp8/QKwIUPIyOp3NwWixyEg7kyVeNGYPjtAs=</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="false">
            <Title>A</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">Language:&lt;select size="1" onchange="window.location.href='problem?id=3304&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Segments&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 1000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 65536K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 1803&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 395&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;Given &lt;i&gt;n&lt;/i&gt;
segments in the two dimensional space, write a program, which
determines if there exists a line such that after projecting these
segments on it, all projected segments have at least one point in
common.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;Input begins with a number &lt;i&gt;T&lt;/i&gt; showing the number of test cases and then, &lt;i&gt;T&lt;/i&gt; test cases follow. Each test case begins with a line containing a positive integer &lt;i&gt;n&lt;/i&gt; ¡Ü 100 showing the number of segments. After that, &lt;i&gt;n&lt;/i&gt; lines containing four real numbers &lt;i&gt;x&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &lt;i&gt;y&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &lt;i&gt;x&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;y&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; follow, in which (&lt;i&gt;x&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;y&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;) and (&lt;i&gt;x&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;, &lt;i&gt;y&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;) are the coordinates of the two endpoints for one of the segments.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;For
each test case, your program must output "Yes!", if a line with desired
property exists and must output "No!" otherwise. You must assume that
two floating point numbers &lt;i&gt;a&lt;/i&gt; and &lt;i&gt;b&lt;/i&gt; are equal if |&lt;i&gt;a&lt;/i&gt; - &lt;i&gt;b&lt;/i&gt;| &amp;lt; 10&lt;sup&gt;-8&lt;/sup&gt;.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;3
2
1.0 2.0 3.0 4.0
4.0 5.0 6.0 7.0
3
0.0 0.0 0.0 1.0
0.0 1.0 0.0 2.0
1.0 1.0 2.0 1.0
3
0.0 0.0 0.0 1.0
0.0 2.0 0.0 3.0
1.0 1.0 2.0 1.0&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;Yes!
Yes!
No!&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=Amirkabir+University+of+Technology+Local+Contest+2006"&gt;Amirkabir University of Technology Local Contest 2006&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=3304"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=3304"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=3304"&gt;Discuss&lt;/a&gt;]
&lt;/font&gt;&lt;/p&gt;</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>B</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=2026&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;As the Crow Flies&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 1000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 30000K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 212&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 121&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;center&gt;&lt;IMG SRC="2.jpg"&gt;&lt;/center&gt;
&lt;br&gt;As president of a startup airline company, you have started a
frequent flier program that rewards customers for every mile they
travel. As a for-profit company, you have a vested interest in
minimizing the number of frequent flier miles that a person can earn on
any one trip. To get an idea of how many miles a customer could earn
flying the existing network, you've decided to write a program. &lt;br&gt;
&lt;br&gt;Assumptions: 
&lt;br&gt;&lt;ul&gt;&lt;li&gt;A passenger's itinerary is one-way (no return flight). 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;Every itinerary takes the shortest route from the departing city to the destination city. 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;Frequent flier miles are counted "as the crow flies"
(i.e., the shortest route across the earth's surface that connects the
cities along the route). &lt;br&gt;&lt;/li&gt;&lt;li&gt;The earth's surface is a perfect sphere with radius 4000 miles. &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;The
first line contains a single integer n indicating the number of data
sets. Each data set will be formatted according to the following
description: &lt;br&gt;
&lt;br&gt;A single data set has 3 components: 
&lt;br&gt;&lt;ol&gt;&lt;li&gt;Header Line - A single line, "X Y", where X is the number
of cities and Y is the number of flight legs in the airline's network.
Both will be positive integers less than 100. &lt;br&gt;&lt;/li&gt;&lt;li&gt;City List - A list of cities and their locations, one city per line. The line will be of the format 
&lt;br&gt;"C LA NS LO EW" where: 
&lt;br&gt;&lt;ul&gt;&lt;li&gt;C is the name of the city (no spaces, alphabetical, first letter only upper case) 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;LA is the degrees of latitude where the city is located (from 0 to 90) 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;NS is the direction of latitude ('N'orth or 'S'outh of the equator) 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;LO is the degrees of longitude where the city is located (from 0 to 180) 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;EW is the direction of longitude ('E'ast or 'W'est of the prime meridian) &lt;/li&gt;&lt;/ul&gt;
&lt;br&gt;&lt;/li&gt;&lt;li&gt;Flight List - A list of city pairs of the format "B C"
representing different cities that are directly connected by flight
legs, one pair per line. Note that "B C" is equivalent to "C B". &lt;/li&gt;&lt;/ol&gt;
&lt;br&gt;Note: 
&lt;br&gt;&lt;ul&gt;&lt;li&gt;Some longitude measurements can be represented in multiple ways (i.e., 180E = 180W) 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;All degrees of latitude and longitude given in the input will be integers. 
&lt;br&gt;&lt;/li&gt;&lt;li&gt;The airline's network is connected (i.e., there is at least one route between any two cities). &lt;/li&gt;&lt;/ul&gt;
&lt;br&gt;&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;For
each data set, output the two cities that are farthest from each other
(farthest in the sense that the shortest route between them is the
longest of any city pair). You are guaranteed that there will be no
ties. Display the city names on the same line, separated by a single
space, sorted in dictionary order. &lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;2
6 5
Northpole 90 N 87 E
Southpole 90 S 180 W
Equatorone 0 N 45 W
Equatortwo 0 S 90 E
Equatorthree 0 S 180 E
Equatorfour 0 N 46 W
Equatorone Equatortwo
Equatortwo Equatorthree
Equatorthree Equatorfour
Northpole Equatortwo
Southpole Equatorthree
2 1
Northpole 90 N 0 E
Southpole 90 S 0 W
Southpole Northpole
&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;Equatorfour Equatorone
Northpole Southpole&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=South+Central+USA+2004"&gt;South Central USA 2004&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=2026"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=2026"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=2026"&gt;Discuss&lt;/a&gt;]</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
                <Figure filename="2.jpg">
                    <Text />
                    <Image xml:space="preserve"></Image>
                </Figure>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>C</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=1873&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;The Fortified Forest&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 1000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 30000K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 1419&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 407&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;Once
upon a time, in a faraway land, there lived a king. This king owned a
small collection of rare and valuable trees, which had been gathered by
his ancestors on their travels. To protect his trees from thieves, the
king ordered that a high fence be built around them. His wizard was put
in charge of the operation. &lt;br&gt;Alas, the wizard quickly noticed that the only suitable material
available to build the fence was the wood from the trees themselves. In
other words, it was necessary to cut down some trees in order to build
a fence around the remaining trees. Of course, to prevent his head from
being chopped off, the wizard wanted to minimize the value of the trees
that had to be cut. The wizard went to his tower and stayed there until
he had found the best possible solution to the problem. The fence was
then built and everyone lived happily ever after. &lt;br&gt;
&lt;br&gt;You are to write a program that solves the problem the wizard faced. 
&lt;br&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;The
input contains several test cases, each of which describes a
hypothetical forest. Each test case begins with a line containing a
single integer n, 2 &amp;lt;= n &amp;lt;= 15, the number of trees in the
forest. The trees are identified by consecutive integers 1 to n. Each
of the subsequent n lines contains 4 integers xi, yi, vi, li that
describe a single tree. (xi, yi) is the position of the tree in the
plane, vi is its value, and li is the length of fence that can be built
using the wood of the tree. vi and li are between 0 and 10,000. &lt;br&gt;The input ends with an empty test case (n = 0). 
&lt;br&gt;&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;For
each test case, compute a subset of the trees such that, using the wood
from that subset, the remaining trees can be enclosed in a single
fence. Find the subset with minimum value. If more than one such
minimum-value subset exists, choose one with the smallest number of
trees. For simplicity, regard the trees as having zero diameter. &lt;br&gt;Display, as shown below, the test case numbers (1, 2, ...), the
identity of each tree to be cut, and the length of the excess fencing
(accurate to two fractional digits). &lt;br&gt;
&lt;br&gt;Display a blank line between test cases. 
&lt;br&gt;&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;6
 0  0  8  3
 1  4  3  2
 2  1  7  1
 4  1  2  3
 3  5  4  6
 2  3  9  8
3
 3  0 10  2
 5  5 20 25
 7 -3 30 32
0
&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;Forest 1
Cut these trees: 2 4 5 
Extra wood: 3.16

Forest 2
Cut these trees: 2 
Extra wood: 15.00
&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=World+Finals+1999"&gt;World Finals 1999&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=1873"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=1873"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=1873"&gt;Discuss&lt;/a&gt;]</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>D</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=1019&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Number Sequence&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 1000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 10000K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 16072&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 4192&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;A
single positive integer i is given. Write a program to find the digit
located in the position i in the sequence of number groups S1S2...Sk.
Each group Sk consists of a sequence of positive integer numbers
ranging from 1 to k, written one after another.
&lt;br&gt;For example, the first 80 digits of the sequence are as follows:
&lt;br&gt;11212312341234512345612345671234567812345678912345678910123456789101112345678910&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;The
first line of the input file contains a single integer t (1 ¡Ü t ¡Ü 10),
the number of test cases, followed by one line for each test case. The
line for a test case contains the single integer i (1 ¡Ü i ¡Ü 2147483647)&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;There should be one output line per test case containing the digit located in the position i.&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;2
8
3&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;2
2&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=Tehran+2002"&gt;Tehran 2002&lt;/a&gt;, First Iran Nationwide Internet Programming Contest&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=1019"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=1019"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=1019"&gt;Discuss&lt;/a&gt;]
&lt;/font&gt;&lt;/p&gt;</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>E</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=1845&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Sumdiv&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 1000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 30000K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 4244&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 857&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;Consider
two natural numbers A and B. Let S be the sum of all natural divisors
of A^B. Determine S modulo 9901 (the rest of the division of S by 9901).&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;The only line contains the two natural numbers A and B, (0 &amp;lt;= A,B &amp;lt;= 50000000)separated by blanks.&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;The only line of the output will contain S modulo 9901.&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;2 3&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;15&lt;/pre&gt;&lt;p class="pst"&gt;Hint&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;2^3 = 8.
&lt;br&gt;The natural divisors of 8 are: 1,2,4,8. Their sum is 15.
&lt;br&gt;15 modulo 9901 is 15 (that should be output). 
&lt;br&gt;&lt;/div&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=Romania+OI+2002"&gt;Romania OI 2002&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=1845"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=1845"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=1845"&gt;Discuss&lt;/a&gt;]
&lt;/font&gt;&lt;/p&gt;</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>F</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=3273&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Monthly Expense&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 2000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 65536K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 3658&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 1401&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;Farmer
John is an astounding accounting wizard and has realized he might run
out of money to run the farm. He has already calculated and recorded
the exact amount of money (1 ¡Ü &lt;i&gt;money&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt; ¡Ü 10,000) that he will need to spend each day over the next &lt;i&gt;N&lt;/i&gt; (1 ¡Ü &lt;i&gt;N&lt;/i&gt; ¡Ü 100,000) days.&lt;/p&gt;&lt;p&gt;FJ wants to create a budget for a sequential set of exactly &lt;i&gt;M&lt;/i&gt; (1 ¡Ü &lt;i&gt;M&lt;/i&gt; ¡Ü &lt;i&gt;N&lt;/i&gt;)
fiscal periods called "fajomonths". Each of these fajomonths contains a
set of 1 or more consecutive days. Every day is contained in exactly
one fajomonth.&lt;/p&gt;&lt;p&gt;FJ's goal is to arrange the fajomonths so as to
minimize the expenses of the fajomonth with the highest spending and
thus determine his monthly spending limit.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;Line 1: Two space-separated integers: &lt;i&gt;N&lt;/i&gt; and &lt;i&gt;M&lt;/i&gt;
&lt;br&gt;Lines 2..&lt;i&gt;N&lt;/i&gt;+1: Line &lt;i&gt;i&lt;/i&gt;+1 contains the number of dollars Farmer John spends on the &lt;i&gt;i&lt;/i&gt;th day&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;Line 1: The smallest possible monthly limit Farmer John can afford to live with.&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;7 5
100
400
300
100
500
101
400&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;500&lt;/pre&gt;&lt;p class="pst"&gt;Hint&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;If
Farmer John schedules the months so that the first two days are a
month, the third and fourth are a month, and the last three are their
own months, he spends at most $500 in any month. Any other method of
scheduling gives a larger minimum monthly limit.&lt;/div&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=USACO+2007+March+Silver"&gt;USACO 2007 March Silver&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=3273"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=3273"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=3273"&gt;Discuss&lt;/a&gt;]</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
            </Problem>
            <TestData>
                <TimeLimit>2</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>g</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=3472&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Holey Square Tiling&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 10000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 131072K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 673&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 183&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;Given a square of size &lt;i&gt;n&lt;/i&gt; + 2 with a square hole of size &lt;i&gt;n&lt;/i&gt; 1¤71¤7 2 in the middle (see the figure below), calculate the number of different ways to tile it with dominoes of size 1 ¡Á 2.&lt;/p&gt;&lt;div align="center"&gt;&lt;IMG SRC="g.gif"&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;The input consists of multiple test cases. Each test case contains only one integer &lt;i&gt;n&lt;/i&gt; (3 ¡Ü &lt;i&gt;n&lt;/i&gt; ¡Ü 10&lt;sup&gt;4&lt;/sup&gt;). Process util EOF is met.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;For each test case, output the desired number in decimal using the comma as the thousand separator.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;3
50&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;196
401,520,777,816,387,690,468,975,409,805,843,797,460,004&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=POJ+Founder+Monthly+Contest+%E2%80%93+2007.12.30"&gt;POJ Founder Monthly Contest 1¤7 2007.12.30&lt;/a&gt;, frkstyc&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=3472"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=3472"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=3472"&gt;Discuss&lt;/a&gt;]</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
                <Figure filename="g.gif">
                    <Text />
                    <Image xml:space="preserve">iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAMAAADQmBKKAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAVUExURf///yQkJNLS0ry8vH19fezs7P///wrz6GQAAAAHdFJOU////////wAaSwNGAAAB7klEQVR42uzc62rDMAwFYEs62vs/8mSnJHR1CsrSWYyjP21NMR+5WrGcpigV1kxqRYDaNNRT7a63/B0EEUQQQQQRRBBBBBFE0D8E6TRMV8QA+TSAebtqpjn79ze7TKTWMaQiXgoEESsFGml2IdB4BKGFQFCBohDIm6B5qSu1oNitgyCCCCKIIIIIugyaj//lJOuAJeMkG3mTdcwzpBigzduTgXxelttl4l+ZAD59DBFEEEEEEUQQQQQR9EegGCy3ZjCvAoKLQdvewWqQo41n9/seXA1SbePRfQXQIyXavuzp2FlelgblZ4P2lOgpHTvNy7Kgy3nZ2Efxy63IaT8OoWCY1gBtn9hnOJaD1PbLI28dBBFEEEEEEUQQQQTVBpWbnio3gcc5V4IIIogggggiqAAIMR5SKwSyGOqVKoEvt0igL6NAKZA9Fpqo3gyyy2dZtEcSgLu3UKQzdqlsEEBPYl6SiHTW8dLB6DZfNvjht10gXTaofUpvsmLp1wd1P1306gq8EPvNIIzpHa5RJIigFKjPi8aF1LwKaJSNWJs+LFsBGmUjcROe9rQCNMpGvBBoq4fQ+Sh8DQgd5NOFsWtAfYGlHmUj60/72DauR9nIclDvwhXThbFLQDrGpEfZCG8dBBH0A1Ts5X7VXn/4LcAA/85cL0uMa14AAAAASUVORK5CYII=</Image>
                </Figure>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0	
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>h</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=2151&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Check the difficulty of problems&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 2000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 65536K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 789&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 307&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;Organizing
a programming contest is not an easy job. To avoid making the problems
too difficult, the organizer usually expect the contest result satisfy
the following two terms:
&lt;br&gt;1.	All of the teams solve at least one problem.
&lt;br&gt;2.	The champion (One of those teams that solve the most problems) solves at least a certain number of problems.
&lt;br&gt;
&lt;br&gt;Now the organizer has studied out the contest problems, and through
the result of preliminary contest, the organizer can estimate the
probability that a certain team can successfully solve a certain
problem.
&lt;br&gt;
&lt;br&gt;Given the number of contest problems M, the number of teams T, and
the number of problems N that the organizer expect the champion solve
at least. We also assume that team i solves problem j with the
probability Pij (1 &amp;lt;= i &amp;lt;= T, 1&amp;lt;= j &amp;lt;= M). Well, can you
calculate the probability that all of the teams solve at least one
problem, and at the same time the champion team solves at least N
problems?
&lt;br&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;The
input consists of several test cases. The first line of each test case
contains three integers M (0 &amp;lt; M &amp;lt;= 30), T (1 &amp;lt; T &amp;lt;= 1000)
and N (0 &amp;lt; N &amp;lt;= M). Each of the following T lines contains M
floating-point numbers in the range of [0,1]. In these T lines, the
j-th number in the i-th line is just Pij. A test case of M = T = N = 0
indicates the end of input, and should not be processed.&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;For
each test case, please output the answer in a separate line. The result
should be rounded to three digits after the decimal point. &lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;2 2 2
0.9 0.9
1 0.9
0 0 0
&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;0.972&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=POJ+Monthly"&gt;POJ Monthly&lt;/a&gt;,Â³Ð¡Ê¯&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=2151"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=2151"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=2151"&gt;Discuss&lt;/a&gt;]
&lt;/font&gt;&lt;/p&gt;</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
            </Problem>
            <TestData>
                <TimeLimit>2</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>I</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=3155&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Hard Life&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 8000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 65536K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 1424&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 376&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="color: rgb(14, 173, 0);"&gt;&lt;b&gt;Case Time Limit:&lt;/b&gt; 2000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td style="font-weight: bold; color: red;"&gt;Special Judge&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;span lang="en-us"&gt;&lt;p&gt;John
is a Chief Executive Officer at a privately owned medium size company.
The owner of the company has decided to make his son Scott a manager in
the company. John fears that the owner will ultimately give CEO
position to Scott if he does well on his new manager position, so he
decided to make Scott¡¯s life as hard as possible by carefully selecting
the team he is going to manage in the company.&lt;/p&gt;&lt;p&gt;John knows which pairs of his people work poorly in the same team. John introduced a &lt;i&gt;hardness factor&lt;/i&gt;
of a team ¨D it is a number of pairs of people from this team who work
poorly in the same team divided by the total number of people in the
team. The larger is the hardness factor, the harder is this team to
manage. John wants to find a group of people in the company that are
hardest to manage and make it Scott¡¯s team. Please, help him.&lt;/p&gt;&lt;div align="center"&gt;&lt;IMG SRC="i.gif"&gt;&lt;/div&gt;&lt;p&gt;In
the example on the picture the hardest team consists of people 1, 2, 4,
and 5. Among 4 of them 5 pairs work poorly in the same team, thus
hardness factor is equal to &lt;sup&gt;5&lt;/sup&gt;1¤71¤7&lt;sub&gt;4&lt;/sub&gt;. If we add person number 3 to the team then hardness factor decreases to &lt;sup&gt;6&lt;/sup&gt;1¤71¤7&lt;sub&gt;5&lt;/sub&gt;.&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;span lang="en-us"&gt;&lt;p&gt;The first line of the input file contains two integer numbers &lt;i&gt;n&lt;/i&gt; and &lt;i&gt;m&lt;/i&gt; (1 ¡Ü &lt;i&gt;n&lt;/i&gt; ¡Ü 100, 0 ¡Ü &lt;i&gt;m&lt;/i&gt; ¡Ü 1000). Here &lt;i&gt;n&lt;/i&gt; is a total number of people in the company (people are numbered from 1 to &lt;i&gt;n&lt;/i&gt;), and m is the number of pairs of people who work poorly in the same team. Next &lt;i&gt;m&lt;/i&gt; lines describe those pairs with two integer numbers &lt;i&gt;a&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt; and &lt;i&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt; (1 ¡Ü &lt;i&gt;a&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt;, &lt;i&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt; ¡Ü &lt;i&gt;n&lt;/i&gt;, &lt;i&gt;a&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt; ¡Ù &lt;i&gt;b&lt;sub&gt;i&lt;/sub&gt;&lt;/i&gt;) on a line. The order of people in a pair is arbitrary and no pair is listed twice.&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;span lang="en-us"&gt;&lt;p&gt;Write to the output file an integer number &lt;i&gt;k&lt;/i&gt; (1 ¡Ü &lt;i&gt;k&lt;/i&gt; ¡Ü &lt;i&gt;n&lt;/i&gt;) ¨D the number of people in the hardest team, followed by &lt;i&gt;k&lt;/i&gt;
lines listing people from this team in ascending order. If there are
multiple teams with the same hardness factor then write any one.&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;&lt;b&gt;sample input #1&lt;/b&gt;
5 6
1 5
5 4
4 2
2 5
1 2
3 1

&lt;b&gt;sample input #2&lt;/b&gt;
4 0&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;&lt;b&gt;sample output #1&lt;/b&gt;
4
1
2
4
5

&lt;b&gt;sample output #2&lt;/b&gt;
1
1&lt;/pre&gt;&lt;p class="pst"&gt;Hint&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;p&gt;Note, that in the last example any team has hardness factor of zero, and any non-empty list of people is a valid answer.&lt;/p&gt;&lt;/div&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=Northeastern+Europe+2006"&gt;Northeastern Europe 2006&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=3155"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=3155"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=3155"&gt;Discuss&lt;/a&gt;]</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
                <Figure filename="i.gif">
                    <Text />
                    <Image xml:space="preserve">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</Image>
                </Figure>
            </Problem>
            <TestData>
                <TimeLimit>8</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
        <ProblemArchive version="1.0" checked="false">
            <Title>j</Title>
            <Author>dhu</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">&lt;select size="1" onchange="window.location.href='problem?id=3150&amp;amp;lang='+this.value+'&amp;amp;change=true'"&gt;&lt;option value="default" selected="selected"&gt;Default&lt;/option&gt;&lt;/select&gt;&lt;/div&gt;&lt;div class="ptt" lang="en-US"&gt;Cellular Automaton&lt;/div&gt;
&lt;div class="plm"&gt;&lt;table align="center"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Time Limit:&lt;/b&gt; 12000MS&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Memory Limit:&lt;/b&gt; 65536K&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Total Submissions:&lt;/b&gt; 1202&lt;/td&gt;&lt;td width="10"&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Accepted:&lt;/b&gt; 436&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3" style="color: rgb(14, 173, 0);" align="center"&gt;&lt;b&gt;Case Time Limit:&lt;/b&gt; 2000MS&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class="pst"&gt;Description&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;span lang="en-us"&gt;&lt;p&gt;A &lt;i&gt;cellular automaton&lt;/i&gt;
is a collection of cells on a grid of specified shape that evolves
through a number of discrete time steps according to a set of rules
that describe the new state of a cell based on the states of
neighboring cells. The &lt;i&gt;order of the cellular automaton&lt;/i&gt; is the number of cells it contains. Cells of the automaton of order &lt;i&gt;n&lt;/i&gt; are numbered from 1 to &lt;i&gt;n&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The &lt;i&gt;order of the cell&lt;/i&gt; is the number of different values it may contain. Usually, values of a cell of order &lt;i&gt;m&lt;/i&gt; are considered to be integer numbers from 0 to &lt;i&gt;m&lt;/i&gt; 1¤71¤7 1.&lt;/p&gt;&lt;p&gt;One
of the most fundamental properties of a cellular automaton is the type
of grid on which it is computed. In this problem we examine the special
kind of cellular automaton ¨D circular cellular automaton of order &lt;i&gt;n&lt;/i&gt; with cells of order &lt;i&gt;m&lt;/i&gt;. We will denote such kind of cellular automaton as &lt;i&gt;n,m-automaton&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;A distance between cells &lt;i&gt;i&lt;/i&gt; and &lt;i&gt;j&lt;/i&gt; in &lt;i&gt;n&lt;/i&gt;,&lt;i&gt;m&lt;/i&gt;-automaton is defined as min(|&lt;i&gt;i&lt;/i&gt; 1¤71¤7 &lt;i&gt;j&lt;/i&gt;|, &lt;i&gt;n&lt;/i&gt; 1¤71¤7 |&lt;i&gt;i&lt;/i&gt; 1¤71¤7 &lt;i&gt;j&lt;/i&gt;|). A &lt;i&gt;d-environment of a cell&lt;/i&gt; is the set of cells at a distance not greater than &lt;i&gt;d&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;On each &lt;i&gt;d-step&lt;/i&gt; values of all cells are simultaneously replaced by new values. The new value of cell &lt;i&gt;i&lt;/i&gt; after &lt;i&gt;d&lt;/i&gt;-step is computed as a sum of values of cells belonging to the &lt;i&gt;d&lt;/i&gt;-enviroment of the cell &lt;i&gt;i&lt;/i&gt; modulo &lt;i&gt;m&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;The following picture shows 1-step of the 5,3-automaton.&lt;/p&gt;&lt;div align="center"&gt;&lt;IMG SRC="j.gif"&gt;&lt;/div&gt;&lt;p&gt;The problem is to calculate the state of the &lt;i&gt;n&lt;/i&gt;,&lt;i&gt;m&lt;/i&gt;-automaton after &lt;i&gt;k&lt;/i&gt; &lt;i&gt;d&lt;/i&gt;-steps.&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class="pst"&gt;Input&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;span lang="en-us"&gt;&lt;p&gt;The first line of the input file contains four integer numbers &lt;i&gt;n&lt;/i&gt;, &lt;i&gt;m&lt;/i&gt;, &lt;i&gt;d&lt;/i&gt;, and &lt;i&gt;k&lt;/i&gt; (1 ¡Ü &lt;i&gt;n&lt;/i&gt; ¡Ü 500, 1 ¡Ü &lt;i&gt;m&lt;/i&gt; ¡Ü 1 000 000, 0 ¡Ü &lt;i&gt;d&lt;/i&gt; &amp;lt; &lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;1¤71¤7&lt;sub&gt;2&lt;/sub&gt; , 1 ¡Ü &lt;i&gt;k&lt;/i&gt; ¡Ü 10 000 000). The second line contains n integer numbers from 0 to &lt;i&gt;m&lt;/i&gt; 1¤71¤7 1 ¨D initial values of the automaton¡¯s cells.&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class="pst"&gt;Output&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;span lang="en-us"&gt;&lt;p&gt;Output the values of the &lt;i&gt;n&lt;/i&gt;,&lt;i&gt;m&lt;/i&gt;-automaton¡¯s cells after &lt;i&gt;k&lt;/i&gt; &lt;i&gt;d&lt;/i&gt;-steps.&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p class="pst"&gt;Sample Input&lt;/p&gt;&lt;pre class="sio"&gt;&lt;b&gt;sample input #1&lt;/b&gt;
5 3 1 1
1 2 2 1 2

&lt;b&gt;sample input #2&lt;/b&gt;
5 3 1 10
1 2 2 1 2&lt;/pre&gt;&lt;p class="pst"&gt;Sample Output&lt;/p&gt;&lt;pre class="sio"&gt;&lt;b&gt;sample output #1&lt;/b&gt;
2 2 2 2 1

&lt;b&gt;sample output #2&lt;/b&gt;
2 0 0 2 2&lt;/pre&gt;&lt;p class="pst"&gt;Source&lt;/p&gt;&lt;div class="ptx" lang="en-US"&gt;&lt;a href="http://acm.pku.edu.cn/JudgeOnline/searchproblem?field=source&amp;amp;key=Northeastern+Europe+2006"&gt;Northeastern Europe 2006&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;font size="3" color="#333399"&gt;&lt;/font&gt;&lt;p align="center"&gt;
&lt;font size="3" color="#333399"&gt;[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/submit?problem_id=3150"&gt;Submit&lt;/a&gt;]&amp;nbsp;&amp;nbsp;
 [&lt;a href="javascript:history.go(-1)"&gt;Go Back&lt;/a&gt;]&amp;nbsp;&amp;nbsp; [&lt;a href="http://acm.pku.edu.cn/JudgeOnline/problemstatus?problem_id=3150"&gt;Status&lt;/a&gt;]&amp;nbsp;&amp;nbsp; 
[&lt;a href="http://acm.pku.edu.cn/JudgeOnline/bbs?problem_id=3150"&gt;Discuss&lt;/a&gt;]</Description>
                <InputSpec xml:space="preserve" />
                <OutputSpec xml:space="preserve" />
                <Figure filename="j.gif">
                    <Text />
                    <Image xml:space="preserve">R0lGODlhVgGLAKIGAPHx8RsbG6+vr4qKilxcXNDQ0P///wAAACH5BAEAAAYALAAAAABWAYsAAAP/aLrc7kAUE8G7OOvN8RBdKI5kuRUCEE1m64YAYb30AwR4ANY8H+m9oNA3yMmGyFEsMEu2YoKUc6oBDIo7qnZr/bC2YEXhygyLYk1z+JZVu2nW73tbKM8zMZT07mTz/0oDemmAQXWEhRQEKQNHfQWQkYhDfomWF10ABQRySJGfdHaXDZU1Y405AQQEqqtGBFedcECjtRCrkyUojaw4q6yur4KyL4e2YxY3BC4RRaqxnQEOkFe9H7lntLajcRRF2BxjvbASDtIMmgKoz8QkxtzfFAEDuqiL7QvnGSjAgk/a2yzVAWFFlAgB/fDlq6IOh78W70aNERNA4QOE8ywy0Beu/8iiEqUCJkKjiJ6ITar2cOCogV9GXQYtRfilccEYVTUbsOyA8uGGmc/AiVSzqdEAoQycqQyx86dSGPaODg3HSmqJph0KcprKlYfHnA+wcsBosiuPni/Ehvhqtq2IIlZbqKU6z+2TqjXmrp2H1C5XAar6btBLF6xfA3B7EN5b9rBblIY1LB4b2PG+VZElC9m01XLXxEEmd8Di2QHgxjxE721TuhZnwSJUh1PVWgGrzCuT1FlWe9TpJLJHV/S820nwELd7JyqCu8NxyqzbDpzyXHhz5T1WUal+oq5dwNGFcIeOfQ4sLeM3aG8LGB9nnHLhOLowvXyYOqghfEh7t9fSBv/r/TUcfUcs0Vx1P8Q0DUD2OYFfS6yEF5sJeXjj3QWNCIhPhRTNN6EJRbGCVH0N6nahDauQ5sJx6ixgYAYZitQeHjiwcIOCuTETT3cSlkjDebP16BxIESpQkJCI8XbMgBi8KA+THz6xY3fX+XgBkEHyR0JBJnGpXn6FkIhHEzfCttELBcE2o5U1BJjlihR+sQSStoH5x4mMmcBdmm8pyWYLMYYg5lWmVPYTg3+4CYOhJOw5ZQeK/nkSlG/GhyZzglJ6B2BEejiCozhKRqekYY3awKCN0rDmWn7eUUdmVnj66aWh7qMpqRlgOampGHD3agm6mmenBgjN8N+QOtYKY6v/uGLAKUy8XlDdJiygkE2VNAR6kCMkpZqsmQx81KxkzaE6K4WdGRDFCM++cUNmu13BC7gKgEovRfc2eAVEiJ67ZYry3qpBsGHsq0QqRvCkzi+tpFgOBzGMI+4IBo+7IEjrtCLYKQz/EgvEziBMb0T3pceTM+R8AsnCDmEbm8utEZwEUCmrzHFK+ZJQcRgyC1GQDjmh4FDOrFrcQLtTkAUWRun2oewQdWgBV7mgUQezZf0GAVjWHLA1xc5a9MwDYLL+y3UN2o4btYNFqkobdURPOkVyPRRn3NV+TTzEb0FgmgTYTgB+Fp49+D2E4H+ujQTdmxHug8mDxX0BeEmf/Y/R/4j/yGwQESehdxIIIbGqg5ab8LmkT5s+bBCRFho23guMPoW5L4TerO1CiD1E6zQI/DjUvnsSvJ6Su3X6j6svnnwJmaP9kmLRjg25ATctjx3OhW+OXvT7oDJ3FMBw74DuX2u/bUq4/4lQQ4vETXLJ2N6U0fCXG8m0+OpO3yj+9zeh/1ATuwksDgQ7ipmvJc7wSfNckD77he9TBRyB4jrQv/Hhzy8Kkp9PunbALRwPAxqUxSb+troKaiBtbyAfBe4HI+u1ZoLTSKBGblA8F8CQPjLMwP9sUxMThqWGzBALzUY1QvV1UAw5xJALqSC2EHKgaYphV/gIscCCoWaI/rLSfv8ElUQXpS4UMcTeWpYoqCPiMCUsoB8Y1uaSDYoAig2CY0dapoAq8mwHPtzW3sj4APmx4hKqoKMLtmilPZFFjWBAyBRtaEaK8RGEvDOPHJn3SLvckEJFuAQbavi/SV4lgjaEXBF9NEpVVXJuePviG692g1qo8gSNtEyLePDBO9gRUgUUZSx5lko23XIlQDzLLgd2QWkV7pRfQ6Y5fKlMndSilV5p5jJpWUzQDVOHXbHCvTwpwWtuAXK/pEp2QFkMb0qLnI2DzyqFaQtuvkWaDCjlC9z5Bnm6gJ5hQhiv8DkWeO7uauGE5ThdY84H0BNhCE2oQhfK0Ibi4IkA9WfuImr/iIKOD50QsSiAMFq3hFqPnxsIKBhAekKJUk+j4eKoLlC6AJK6Sp/IudosR+FSD5jUni2oqRZwqieVFkqdMWVnLXT6AJFqhpq1aCCcuGIF012Np3c6pnikOgqjGlOLEt0hmsBpUgPocqi9xKpifHoSlvJwohRcHTQBmYuI4eBYpzKrjJb3Hk/Wcg6I+0FVkEJUDNBTK+S6xCUVMQEvXYZNUBVDgRh3tK7+iBiZoB6jpBVMxCQPIR4p6SUQN1MnKRGxauGQZMs22DmslRTcqtpVtWY9ZbREqz1FES2OBKNqdiW0NTISDnKByC0oVQFkM9Zk4wo1M7o2sPnEBGgMeyWy/yZqQ3S7UTt+OweB7WYG13WWXM90qCOiUFhNklPbVqtFIanAi7V65ezUUoAm8O2z/+wuMAFx2teWTbGSou5FHLcAq+bOhZ41KCireNwTbld1WWGsA/z7mMUoAxw0/ENpTWM5rerXi43srfBCILuLkop+EUPKd81QOt0iKbFaolEjkeYGRP7qqJIipHLvaw7nLriRUAgpMmcq4Cq87YmOhVQjqSUGCSVWkRp2FY0vrC5HwDWe6u1oTXK8Qt5uCBXRuUEJk1fgldiWBCxuUrrWVdQeoYFPIgkxNrU7g24t6w0ltkIWeFraboiJuTaYS5epZIYXVwFgZGhHrbb4IBkNF/9ARn5GNWgcriDnqrVwkVfPMjcRRcxHHMn7IEZ8wc8Om2hUPxPZRcy3hGT82BZyZvRvb4SwWKowOy6sA0Il5DvKoRkN5GOyCTwtBMrtTkjqMLWjvcIPoUQZUsMO14EpgoetoDkKMVjescnjBF/7bDK8LkRTi6XZxS07nq8Glqm0bKSjRFvHJvq2ARRM1Z/c9Q/abLJQJvwCFfWav7PISiOS4Y9z+9gJroDdbtTt1b5QeRvWkrd6vtxHh3CuF+S0Y6zaLOmgDCzIGdqNyyCzbowbt98M32M1gEqfHb5rTs6jR5hrEOENBLsC6MA3lIH3Ba+5Ay8UiSCIrxAFHqN630//DHlLy4IS/GnlC+F+51gWAb4moAQWfO0qorqIQIcfTX8jRkfI3ppmVLix4UJA4dPHrTRzCL3ltkqFRd93T/P50QsqY9nzDCrXdxkNQBL1MymYBo1PyL2WbAdUsm0qPYhx7BcAa6+Xo3n3U027VOFYGOIdVpOsSxC2g9l4koux+Ys1vgGWRw7BrwTPpO9tPKb3CkpLjKvOM2DlVLD7IEcP5NmDF1C09wu9X2vj2E3L9T2QvTseP4tyEd9HkfySLQuaetAFR/j1nDbrLTb9pOReVMy7vpBJ0PzDXbP7pNL7bAAh/u5Udp5kDD2EgFEl06v/8/m7Vn/emjPYl7z3POIJ//A3kQx2Zyon2QZ/1occyFQheMZ9SyRzL1UT1YdaX5Bdu0YY5SeApMdBDFQWAbY/tbcNAbhuFiVdunV8ySdZQvcn5DOBCTZb9gYTQjGCgJBt9peCNpJbK9IjtEOBfrU6DUgKy6Va2fdmU+FpKHgGZLJbnEcMN4iDJWcnLvgT4rWD42Mn75cIHQZ+MKKAo8EsSaiEOUhhwMNoWaEpTXgJ1pYklHBoCOZ7JWg0bjKE6AJ8Vwcg2tc4JhF4zIALwTcghsOFwOIIVugscHhjFDF4s4MLgagfYDh8EYN/WlQRUzgpOhcFUFhVpzY2TgZEOMeHNCBrxVUtISdrjCg6WLgtbf+WiMKxhkrIGXgjWmS2iZVYGhkIIoo2L65oippIMaPobrAQMDCzgspxGkTDamqHJuN1i5vhf1CRUHFDNr6Ui2Dgg8Z4en0FPIfYFWjxBx5xftFYVCRXT8UoKT2hjVVgc9u4BR6Bii7HdXenFehoGntVjm+wNXExO+eIg2SBjuzTjvB4MmjkCVSHgzTzde5gD0+2j/WUQAWpMP9ojOLQCsMAYdTgCgNkkAHRkM8gARZBDetwDxR5KpKndgwjDA/TkUx1MyDZC5wWC+JIgaBAkvahMi4ZkzI5kzRZkzZ5kziZkzq5kzzZkz75k0AZlEI5lG7QBVBHlCIRIqG4jv6whUhleQckARgrqYkhtmdPmQjT4ZQ5GQEE4YxXuQb+0IE+6YZfyQcTd5U3oY9lSSELM5XR+ANquZYYY4s7WWpyyQ1eWZPTURBLeZflVgYPRpS/omZ+CZVAV2hDORO80JeF6Q2wwBeHkQAAOw==</Image>
                </Figure>
                <Figure filename="a1.gif">
                    <Text />
                    <Image xml:space="preserve">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</Image>
                </Figure>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

