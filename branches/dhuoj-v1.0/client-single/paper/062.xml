<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="true">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">1</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>6</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MC0CFBsX2+EG8SyUq8TT/ugtWrW5/pf3AhUAj7kwzfRJm4H3eT4oosSACKiMPUU=</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe><![CDATA[1)登陆及提交说明
请不要擅自操作键盘和鼠标，根据现场工作的人员的指示操作。


2)试题描述说明
试题主要是描述了一个问题，并请你用程序来解决这个问题。一般来说，你所编写的程序应该能够接受题目中所描述的数据，按照题目的描述处理这些数据，并且严格按照输出描述(The Output)中所述的格式输出结果。程序将提交到服务器进行打分。打分详情可见‘3)打分说明’部分。
试题主要分为六部分: 
1.标题
包括试题的主标题，以及副标题Time Limit部分，Time Limit表示所提交的答题程序所能运行的最长时间，如果超过这个时间，程序无论输出是否正确，都将被裁判端判为Time Limit Exceed。
比如Time Limit是10 sec(10秒)。如果提交的答题程序运行时间超过10秒，则会被判为Time Limit Exceed，无论答题程序输出是否正确，也就是说在10秒内答题程序输出的结果正确或错误都不会得到任何提示。

2.Descripiton
题目描述，作为题目的主要部分，对问题进行详细的说明。

3.The Input
输入描述部分，这部分描述了输入数据及其格式和范围。输入答题程序的数据将严格按照这部分的描述。

4.The Output
输出描述，这部分描述了答题程序所应该输出的数据及其格式。答题程序必须按照这部分的描述来输出，否则很有可能无法通过裁判端的测试。

5.Sample Input
输入样例，以实例来说明输入数据的格式。请注意这里的数据只是作为实例，并不代表实际测试答题程序的数据是这些。因此能正确处理Sample中的数据并不代表程序一定能通过。不过，Sample数据一定是实际测试数据的子集，因此不能正确处理Sample就一定无法在裁判端通过。所以没有通过Sample的程序最好不要贸然提交。

6.Sample Output
对应输入样例的输出数据，用来说明答题程序所应输出的格式。答题程序的输出应该严格按照这部分所示输出。比如：
在Sample Output中有两个整数独占一行，并且以空格分隔，如下：
2 3
那么如下的输出都是错误的：
a=2 b=3
或
2       3
或
3 2
必须严格按照Sample Output中所示的格式输出才有可能通过裁判端打分。

3)打分说明
打分结果	评判标准
Compile Error	编译错
Time Limited Exceeded	程序运行超过时间限制
Run Time Error	程序运行错误
Wrong Answer	输出结果中关键数据错误
Presentation Error	格式错
Accepted	输出结果完全正确


4)程序编写说明
1.C/C++
首先，必须注意程序的main函数需要定义成int型，然后必须return 0。
其次，如果输入描述(The Output)中没有明确规定输入结束标志或说以EOF结束，那么可以使用如下格式来读入：

while(cin>>a)或while(scanf("%d",&a)==1)

注：这里while(scanf("%d",&a)==1)中的1是输入数据的数量，如果有两个则是：
while(scanf("%d %d",&a,&b)==2)

以输入两数求和为例，可以使用以下程序来输入和处理：
//code start
#include<iostream.h>
int main(){
	int a,b;
	while(cin>>a>>b){
		cout<<a+b<<endl;
	}
	return 0;
}

2.Pascal
Pascal采用Free Pascal编译器。
以两数求和为例，代码为：
Program p1000(Input, Output); 

Var 

    a, b: Integer; 

Begin

    while not eof(Readln(a, b)) do
 
    begin 

    Writeln(a + b); 
    
    end;

End.
]]></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.1" checked="true">
            <Title>单组测试数据输入输出练习之一</Title>
            <Author>Step By Step</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">请编写一个程序，要求该程序从标准输入设备中读入数据，然后把读入的数据输出到标准输出设备中。&lt;p&gt;

注：通常，键盘为标准输入设备，显示屏为标准输出设备。
</Description>
                <InputSpec xml:space="preserve">输入数据由一行组成，其中包含：一个整数a，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；一个整数b，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；他们以一个空格分隔，在行首和行尾没有多余的空格。&lt;p&gt;</InputSpec>
                <OutputSpec xml:space="preserve">输出数据由一行组成，其中包含：一个整数a代表了输入中的该整数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；一个整数b代表了输入中的该整数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；他们以一个空格分隔，在行首和行尾没有多余的空格。&lt;p&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1 1
</TestInput>
                    <TestOutput xml:space="preserve">1 1
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">3 4
</TestInput>
                    <TestOutput xml:space="preserve">3 4
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">0 0
</TestInput>
                    <TestOutput xml:space="preserve">0 0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="" filename=""></Solution>
            <JudgeType>Single Case</JudgeType>
        </ProblemArchive>
        <ProblemArchive version="1.1" checked="true">
            <Title>单组测试数据输入输出练习之二</Title>
            <Author>Step By Step</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">请编写一个程序，要求该程序从标准输入设备中读入数据，然后把读入的数据输出到标准输出设备中。&lt;p&gt;

注：通常，键盘为标准输入设备，显示屏为标准输出设备。</Description>
                <InputSpec xml:space="preserve">输入数据由一行组成，该行中仅为一个整数res，在行首和行尾没有多余的空格。&lt;p&gt;</InputSpec>
                <OutputSpec xml:space="preserve">输出数据由一行组成，该行中仅为一个整数res代表了输入中的该整数，在行首和行尾没有多余的空格。&lt;p&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1
</TestInput>
                    <TestOutput xml:space="preserve">1
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">3
</TestInput>
                    <TestOutput xml:space="preserve">3
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="" filename=""></Solution>
            <JudgeType>Single Case</JudgeType>
        </ProblemArchive>
        <ProblemArchive version="1.1" checked="false">
            <Title>min(Single)</Title>
            <Author>冯奇俊</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">输出两个整数中较小的数</Description>
                <InputSpec xml:space="preserve">输入数据由一行组成，其中包含：一个整数a代表了需要比较大小的一个数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；一个整数b代表了需要比较大小的另一个数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；他们以一个空格分隔，在行首和行尾没有多余的空格。&lt;p&gt;</InputSpec>
                <OutputSpec xml:space="preserve">输出数据由一行组成，该行中仅为一个整数res代表了两数中较小的数，相同时任意一个都可以，在行首和行尾没有多余的空格。&lt;p&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1 1
</TestInput>
                    <TestOutput xml:space="preserve">1
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">3 4
</TestInput>
                    <TestOutput xml:space="preserve">3
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">0 0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="" filename=""></Solution>
            <JudgeType>Single Case</JudgeType>
        </ProblemArchive>
        <ProblemArchive version="1.1" checked="true">
            <Title>多组测试数据输入输出练习之一</Title>
            <Author>Step By Step</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">请编写一个程序，要求该程序能从标准输入设备中读入多组数据，然后把这些读入的数据直接输出到标准输出设备中。&lt;p&gt;

注：通常，键盘为标准输入设备，显示屏为标准输出设备。
</Description>
                <InputSpec xml:space="preserve">标准输入设备中有多组测试数据，所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输入数据由一行组成，其中包含：一个整数a，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；一个整数b，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；他们以一个空格分隔，在行首和行尾没有多余的空格。&lt;p&gt;</InputSpec>
                <OutputSpec xml:space="preserve">依次输出从标准输入设备中读入的每一组测试数据对应的结果。所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输出数据由一行组成，其中包含：一个整数a代表了输入中的该整数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；一个整数b代表了输入中的该整数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；他们以一个空格分隔，在行首和行尾没有多余的空格。&lt;p&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1 1
</TestInput>
                    <TestOutput xml:space="preserve">1 1
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">3 4
</TestInput>
                    <TestOutput xml:space="preserve">3 4
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976 1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">0 0
</TestInput>
                    <TestOutput xml:space="preserve">0 0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="" filename=""></Solution>
            <JudgeType>Multiple Case</JudgeType>
        </ProblemArchive>
        <ProblemArchive version="1.1" checked="true">
            <Title>多组测试数据输入输出练习之二</Title>
            <Author>Step By Step</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">请编写一个程序，要求该程序能从标准输入设备中读入多组数据，然后把这些读入的数据直接输出到标准输出设备中。&lt;p&gt;

注：通常，键盘为标准输入设备，显示屏为标准输出设备。
</Description>
                <InputSpec xml:space="preserve">标准输入设备中有多组测试数据，所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输入数据由一行组成，该行中仅为一个整数res，在行首和行尾没有多余的空格。&lt;p&gt;</InputSpec>
                <OutputSpec xml:space="preserve">依次输出从标准输入设备中读入的每一组测试数据对应的结果。所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输出数据由一行组成，该行中仅为一个整数res代表了输入中整数，在行首和行尾没有多余的空格。&lt;p&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1
</TestInput>
                    <TestOutput xml:space="preserve">1
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">-1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">3
</TestInput>
                    <TestOutput xml:space="preserve">3
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="" filename=""></Solution>
            <JudgeType>Multiple Case</JudgeType>
        </ProblemArchive>
        <ProblemArchive version="1.1" checked="false">
            <Title>min</Title>
            <Author>冯奇俊</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">输出两个整数中较小的数</Description>
                <InputSpec xml:space="preserve">标准输入设备中有多组测试数据，所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输入数据由一行组成，其中包含：一个整数a代表了需要比较大小的一个数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；一个整数b代表了需要比较大小的另一个数，满足绝对值不大于2&lt;sup&gt;60&lt;/sup&gt; ；他们以一个空格分隔，在行首和行尾没有多余的空格。&lt;p&gt;</InputSpec>
                <OutputSpec xml:space="preserve">依次输出从标准输入设备中读入的每一组测试数据对应的结果。所有数据前后没有多余的空行，两组数据之间也没有多余的空行。每组输出数据由一行组成，该行中仅为一个整数res代表了两数中较小的数，相同时任意一个都可以，在行首和行尾没有多余的空格。&lt;p&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1 1
</TestInput>
                    <TestOutput xml:space="preserve">1
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">3 4
</TestInput>
                    <TestOutput xml:space="preserve">3
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1152921504606846976 1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">0 0
</TestInput>
                    <TestOutput xml:space="preserve">0
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">-1152921504606846976 -1152921504606846976
</TestInput>
                    <TestOutput xml:space="preserve">-1152921504606846976
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="" filename=""></Solution>
            <JudgeType>Mutiple Case</JudgeType>
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

