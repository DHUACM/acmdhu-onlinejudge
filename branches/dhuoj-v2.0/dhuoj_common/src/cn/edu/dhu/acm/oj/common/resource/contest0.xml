<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="true">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">3</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>6</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MC0CFQCKD6Q+Q91hw7FNs9ulBJO02a+bdQIUQtUnSxRg6UenZAnkRmLls3NbV3E=</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe><![CDATA[<pre>
登陆及提交说明
请不要擅自操作键盘和鼠标，根据现场工作的人员的指示操作。


2)试题描述说明
试题主要是描述了一个问题，并请你用程序来解决这个问题。一般来说，你所编写的程序应该能够接受题目中所描述的数据，按照题目的描述处理这些数据，并且严格按照输出描述(The Output)中所述的格式输出结果。程序将提交到服务器进行打分。打分详情可见‘3)打分说明’部分。
试题主要分为六部分: 
1.标题
包括试题的主标题，以及副标题Time Limit部分，Time Limit表示所提交的答题程序所能运行的最长时间，如果超过这个时间，程序无论输出是否正确，都将被裁判端判为Time Limit Exceed。
比如Time Limit是10 sec(10秒)。如果提交的答题程序运行时间超过10秒，则会被判为Time Limit Exceed，无论答题程序输出是否正确，也就是说在10秒内答题程序输出的结果正确或错误都不会得到任何提示。

2.Descripiton
题目描述，作为题目的主要部分，对问题进行详细的说明。

3.The Input
输入描述部分，这部分描述了输入数据及其格式和范围。输入答题程序的数据将严格按照这部分的描述。

4.The Output
输出描述，这部分描述了答题程序所应该输出的数据及其格式。答题程序必须按照这部分的描述来输出，否则很有可能无法通过裁判端的测试。

5.Sample Input
输入样例，以实例来说明输入数据的格式。请注意这里的数据只是作为实例，并不代表实际测试答题程序的数据是这些。因此能正确处理Sample中的数据并不代表程序一定能通过。不过，Sample数据一定是实际测试数据的子集，因此不能正确处理Sample就一定无法在裁判端通过。所以没有通过Sample的程序最好不要贸然提交。

6.Sample Output
对应输入样例的输出数据，用来说明答题程序所应输出的格式。答题程序的输出应该严格按照这部分所示输出。比如：
在Sample Output中有两个整数独占一行，并且以空格分隔，如下：
2 3
那么如下的输出都是错误的：
a=2 b=3
或
2       3
或
3 2
必须严格按照Sample Output中所示的格式输出才有可能通过裁判端打分。

3)打分说明
打分结果		评判标准
Compile Error		编译错
Time Limited Exceeded	程序运行超过时间限制
Run Time Error		程序运行错误
Wrong Answer		输出结果中关键数据错误
Presentation Error	格式错
Accepted		输出结果完全正确


4)程序编写说明
1.C/C++
首先，必须注意程序的main函数需要定义成int型，然后必须return 0。
其次，如果输入描述(The Output)中没有明确规定输入结束标志或说以EOF结束，那么可以使用如下格式来读入：

while(cin&gt;&gt;a)或while(scanf("%d",&a)!=EOF)


以输入两数求和为例，可以使用以下程序来输入和处理：
//code start
#include&lt;iostream.h&gt;
int main(){
	int a,b;
	while(cin&gt;&gt;a&gt;&gt;b){
		cout&lt;&lt;a+b&lt;&lt;endl;
	}
	return 0;
}

2.Pascal
Pascal采用Free Pascal编译器。
以两数求和为例，代码为：
Program p1000(Input, Output); 
Var 
	a, b: Integer; 
Begin
	while not eof(Readln(a, b)) do
	begin 
		Writeln(a + b); 
	end;
End.
</pre>]]></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="true">
            <Title>A+B Problem</Title>
            <Author>acm</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">Calculate a+b</Description>
                <InputSpec xml:space="preserve">The input will consist of a set of pairs of values for a and b , (0 &amp;lt; a, b &amp;lt; 1000)</InputSpec>
                <OutputSpec xml:space="preserve">The output will consist of one line for each line of input giving the exact value of a+b. 
&lt;BR&gt;
&lt;BR&gt;
&lt;BR&gt;
&lt;PRE&gt;
C language
#include &amp;lt;stdio.h&amp;gt;		
int main(){			// be int
	int a, b;
	while (scanf("%d %d", &amp;a, &amp;b)!=EOF){
		printf("%d\n", a + b);
	}
	return 0;		// must return 0;
}

C++ language
#include &amp;lt;iostream&amp;gt;
using namespace std;
int main(){			// be int
	int a, b;
	while (cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b){
		cout &amp;lt;&amp;lt; a + b &amp;lt;&amp;lt; endl;
	}
	return 0;		// must return 0;
}

Java language
import java.io.*;
import java.util.*;
public class Main{          //must be Main
	public static void main(String args[]) throws Exception{
		Scanner cin=new Scanner(System.in);
		while(cin.hasNextInt()){
			int a=cin.nextInt();
			int b=cin.nextInt();
			System.out.println(a+b);
		}
	}
}

Java language (Old program for jdk 1.4)
import java.io.*;
import java.util.*;

public class Main {             //must be Main

    public static void main(String args[]) {
        BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in));
        try {
            while (true) {
                String line = stdin.readLine();
                StringTokenizer st = new StringTokenizer(line);
                int a = Integer.parseInt(st.nextToken());
                int b = Integer.parseInt(st.nextToken());
                System.out.println(a + b);
            }
        } catch (Exception e) {
        }
    }
}

Pascal language
var
  a,b:integer;
begin
  while not eof do begin
    while not eoln do begin
      read(a,b);
      writeln(a+b);
    end;
    readln;
  end;
end.
&lt;/PRE&gt;</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">1 2
</TestInput>
                    <TestOutput xml:space="preserve">3
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">10 90
</TestInput>
                    <TestOutput xml:space="preserve">100
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">5 5
</TestInput>
                    <TestOutput xml:space="preserve">10
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1 1
</TestInput>
                    <TestOutput xml:space="preserve">2
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">3 3
</TestInput>
                    <TestOutput xml:space="preserve">6
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">9 9
</TestInput>
                    <TestOutput xml:space="preserve">18
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">123 123
</TestInput>
                    <TestOutput xml:space="preserve">246
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">111 222
</TestInput>
                    <TestOutput xml:space="preserve">333
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">555 222
</TestInput>
                    <TestOutput xml:space="preserve">777
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">999 999
</TestInput>
                    <TestOutput xml:space="preserve">1998
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="a+b">#include &lt;iostream&gt;
using namespace std;
int main(){
	int a,b;
	while(cin&gt;&gt;a&gt;&gt;b){
		cout&lt;&lt;a+b&lt;&lt;endl;
	}
}</Solution>
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

